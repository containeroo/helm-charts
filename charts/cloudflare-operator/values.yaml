# Default values for cloudflare-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/containeroo/cloudflare-operator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Add additional sidecar containers to the operator pod
# e.g:
# sidecars:
#   - name: your-image-name
#     image: your-image
#     imagePullPolicy: Always
#     ports:
#       - name: portname
#         containerPort: 1234
#
sidecars: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Specifies whether to create a cluster role & cluster role binding for cloudflare-operator
clusterRole:
  create: true
  # The name of a cluster role to bind to; if not set and create is
  # true, a name based on fullname is generated
  name: ""
  # Additional rules to be included in the role
  # e.g:
  # extraRules:
  # - apiGroups:
  #   - ""
  #   resources:
  #   - services
  #   verbs:
  #   - get
  #   - list
  #   - watch
  #
  extraRules: []

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 200Mi

# Enable metrics monitoring of the operator
metrics:
  # Specifies wether to create a PodMonitor for the operator
  podMonitor:
    enabled: false
    # Specifies the namespace to create the PodMonitor in
    namespace:
    # Add additional labels to the PodMonitor
    additionalLabels: {}
    # Specifies the scrape interval for the PodMonitor
    scrapeInterval: 60s
  # Specifies wether to create a PrometheusRule for the operator
  prometheusRule:
    enabled: false
    # Specifies the namespace to create the PrometheusRule in
    namespace:
    # Add additional labels to the PrometheusRule
    additionalLabels: {}

livenessProbe:
  enabled: true

readinessProbe:
  enabled: true

nodeSelector: {}

tolerations: []

affinity: {}
